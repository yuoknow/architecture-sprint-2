name: mongo-sharding-repl-cache

services:
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.6
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server" ]
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.25

  configSrv:
    image: mongo:latest # docker образ
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_1:
    image: mongo:latest
    container_name: shard1_1
    restart: always
    ports:
      - "27018:27018"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.9
    volumes:
      - shard1_1-data:/data/db
    command:
      ["--shardsvr","--replSet","shard1","--bind_ip_all","--port","27018"]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard1_2:
    image: mongo:latest
    container_name: shard1_2
    restart: always
    ports:
      - "27021:27021"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.11
    volumes:
      - shard1_2-data:/data/db
    command:
      ["--shardsvr","--replSet","shard1","--bind_ip_all","--port","27021"]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard1_3:
    image: mongo:latest
    container_name: shard1_3
    restart: always
    ports:
      - "27022:27022"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.12
    volumes:
      - shard1_3-data:/data/db
    command:
      ["--shardsvr","--replSet","shard1","--bind_ip_all","--port","27022"]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_1:
    image: mongo:latest
    container_name: shard2_1
    restart: always
    ports:
      - "27019:27019"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.8
    volumes:
      - shard2_1-data:/data/db
    command:
      ["--shardsvr","--replSet","shard2","--bind_ip_all","--port","27019"]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard2_2:
    image: mongo:latest
    container_name: shard2_2
    restart: always
    ports:
      - "27024:27024"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.13
    volumes:
      - shard2_2-data:/data/db
    command:
      [ "--shardsvr","--replSet","shard2","--bind_ip_all","--port","27024" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard2_3:
    image: mongo:latest
    container_name: shard2_3
    restart: always
    ports:
      - "27023:27023"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.14
    volumes:
      - shard2_3-data:/data/db
    command:
      [ "--shardsvr","--replSet","shard2","--bind_ip_all","--port","27023" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      shard-app-network:
        ipv4_address: 173.18.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  shard-app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/16

volumes:
  config-data:
  shard1_1-data:
  shard1_2-data:
  shard1_3-data:
  shard2_1-data:
  shard2_2-data:
  shard2_3-data:
  redis-data: